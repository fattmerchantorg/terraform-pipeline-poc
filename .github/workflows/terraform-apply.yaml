name: terraform-apply
on:
  push:
    branches: [main]
env:
  TERRAFORM_VERSION: "1.1.9"
jobs:
  apply-qa:
    name: "apply-qa"
    runs-on: ubuntu-20.04
    env:
      TF_WORKSPACE: "terraform-pipeline-poc-qa-us-west-2"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_CLOUD_TOKEN }}
          terraform_version: ${{ env.TERRAFORM_VERSION }}
      - name: Terraform Init
        id: init
        run: TF_LOG=info terraform init
      - name: Terraform Apply
        id: apply
        run: terraform apply
        continue-on-error: true
  apply-dev:
    needs: "apply-qa"
    name: "apply-dev"
    runs-on: ubuntu-20.04
    env:
      TF_WORKSPACE: "terraform-pipeline-poc-dev-us-west-2"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_CLOUD_TOKEN }}
          terraform_version: ${{ env.TERRAFORM_VERSION }}
      - name: Terraform Init
        id: init
        run: TF_LOG=info terraform init
      - name: Terraform Apply
        id: apply
        run: terraform apply
        # continue-on-error: true
  apply-prod:
    needs: "apply-dev"
    name: "apply-prod"
    runs-on: ubuntu-20.04
    env:
      TF_WORKSPACE: "terraform-pipeline-poc-prod-us-west-2"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_CLOUD_TOKEN }}
          terraform_version: ${{ env.TERRAFORM_VERSION }}
      - name: Terraform Init
        id: init
        run: TF_LOG=info terraform init
      - name: Terraform Apply
        id: apply
        run: terraform apply
        # continue-on-error: true
